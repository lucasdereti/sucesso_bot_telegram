from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import logging

TOKEN = TOKEN = "8070321774:AAGCiVU-eh5ncuOBs-KH_5E7WECb1R4Z2bg"

LINK_KIRVANO = "https://pay.kirvano.com/353273fb-3cb8-4b83-ab2c-7f387198101d"

logging.basicConfig(level=logging.INFO)

# Respostas para d√∫vidas frequentes
respostas = {
    "valor": "O investimento no Renda Inteligente est√° com um desconto especial! Clique no link para ver o pre√ßo atualizado: " + LINK_KIRVANO,
    "como funciona": "O curso ensina passo a passo como usar intelig√™ncia artificial para criar renda extra real, mesmo sem experi√™ncia.",
    "vale a pena": "Sim! Muitas pessoas j√° transformaram suas vidas usando nosso m√©todo e come√ßaram a faturar online.",
    "o que tem no produto": "Voc√™ ter√° aulas pr√°ticas, acesso ao nosso grupo exclusivo, suporte e ferramentas para come√ßar a ganhar dinheiro com IA.",
    "sim": "Perfeito! Ent√£o vou te mandar o link, mas guarde para voc√™, √© um segredo poderoso. üòâ\n" + LINK_KIRVANO,
    "n√£o": "Tudo bem, se mudar de ideia, √© s√≥ me chamar. Estou aqui para ajudar voc√™ a mudar sua vida.",
}

# Estados simples para controlar fluxo (usando contexto da conversa)
# Vamos usar um flag para saber se a pessoa j√° confirmou interesse

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['aguardando_confirmacao'] = True  # Ativa flag para esperar resposta "sim" ou "n√£o"
    await update.message.reply_text(
        "Ol√°! Voc√™ tem mesmo interesse em mudar de vida e come√ßar a ganhar dinheiro com intelig√™ncia artificial? Responda com *sim* ou *n√£o*.",
        parse_mode="Markdown"
    )

async def responder(update: Update, context: ContextTypes.DEFAULT_TYPE):
    texto = update.message.text.lower()

    if context.user_data.get('aguardando_confirmacao', False):
        # Est√° esperando a confirma√ß√£o inicial
        if "sim" in texto:
            context.user_data['aguardando_confirmacao'] = False
            await update.message.reply_text(
                "Que √≥timo! Vou te mandar o link, mas por favor, n√£o compartilhe com muita gente ‚Äî esse √© um segredo para poucos que querem realmente mudar de vida. üòâ\n\n" + LINK_KIRVANO
            )
            return
        elif "n√£o" in texto:
            context.user_data['aguardando_confirmacao'] = False
            await update.message.reply_text(
                "Entendo. Se mudar de ideia, estarei aqui para ajudar voc√™ a transformar sua vida!"
            )
            return
        else:
            await update.message.reply_text(
                "Por favor, responda apenas *sim* ou *n√£o* para continuarmos.",
                parse_mode="Markdown"
            )
            return

    # Responder d√∫vidas frequentes
    for palavra, resposta in respostas.items():
        if palavra in texto:
            await update.message.reply_text(resposta)
            return

    # Se n√£o reconheceu, tenta guiar para clicar no link
    await update.message.reply_text(
        "N√£o entendi muito bem. Se quiser saber mais, √© s√≥ perguntar sobre *valor*, *como funciona*, *vale a pena* ou *o que tem no produto*.\n\n"
        "Ou clique no link para garantir sua vaga e mudar sua vida agora:\n" + LINK_KIRVANO,
        parse_mode="Markdown"
    )

if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, responder))
    app.run_polling()
